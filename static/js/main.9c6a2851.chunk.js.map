{"version":3,"sources":["Components/Header/Header.js","Store/ActionTypes.js","utils/axios.js","Store/Actions/RecipeAction.js","Components/CardRecipe/SingleCard/SingleCard.js","Components/CardRecipe/CardRecipe.js","Components/AddRecipe/AddRecipe.js","Components/RecipeInfo/RecipeDetails/RecipeDetails.js","Components/RecipeInfo/RecipeInfo.js","Components/ListRecipe/SingleList/SingleList.js","Components/ListRecipe/ListRecipe.js","App.js","reportWebVitals.js","Store/Reducers/RecipeReducer.js","Store/Reducers/index.js","Store/index.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginBottom","menuButton","marginRight","spacing","title","linkstyle","textDecoration","color","withRouter","props","classes","className","AppBar","position","Toolbar","Typography","variant","to","IconButton","onClick","location","pathname","history","push","edge","Button","GET_RECIPIES","ACTIVE_RECIPE","REMOVE_ACTIVE_RECIPE","CREATE_RECIPE","REMOVE_RECIPE","MODIFY_RECIPE","instance","axios","create","baseURL","GetActiveRecipe","id","dispatch","console","log","type","payload","maxWidth","margin","media","height","paddingTop","avatar","backgroundColor","red","button","marginLeft","recipe","rating","brand","description","images","date","useDispatch","Card","CardHeader","Avatar","substr","toUpperCase","action","subheader","CardMedia","image","CardContent","component","CardActions","disableSpacing","d","startIcon","connect","state","recipy","RecipeReducer","recipes","useState","setstate","useEffect","i","length","allList","map","r","textfields","width","spaced","mapDispatchToProps","CreateRecipe","post","then","response","catch","err","ModifyRecipe","activerecipe","category","brands","changeHandler","e","persist","prev","target","name","value","recipee","ingredientsArray","match","url","Grid","container","item","sm","onSubmit","preventDefault","trim","alert","_id","Recipe","split","goBack","TextField","label","onChange","content","flex","controls","display","alignItems","paddingLeft","paddingBottom","playIcon","but","textAlign","marginTop","ingg","ingg2","padding","RemoveRecipe","dish","chef","price","Paper","elevation","stock","cover","details","flexDirection","RemoveActiveRecipe","setTimeout","params","undefined","src","exact","path","RecipeDetails","AddRecipe","from","imageSpace","alt","App","this","GetRecipe","CardRecipe","ListRecipe","RecipeInfo","align","Component","get","data","products","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","apiRecipe","String","createdAt","RRD","FRD","filter","CNR","MNR","MRIndex","findIndex","combineReducers","store","createStore","Reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c6a2851.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar,Toolbar,Typography,Button,IconButton} from '@material-ui/core';\r\nimport GridOff from '@material-ui/icons/GridOff';\r\nimport GridOn from '@material-ui/icons/GridOn';\r\nimport { withRouter,Link } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom:'2rem'\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  linkstyle: {\r\n    textDecoration: 'none',\r\n    color: '#fff'\r\n  }\r\n}));\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  \r\n  const gridSwitchHandler=()=>{\r\n     if(props.location.pathname === '/cardrecipe' ){\r\n       props.history.push('/listrecipe')\r\n     } \r\n     else if(props.location.pathname === '/listrecipe' ){\r\n      props.history.push('/cardrecipe')\r\n    } \r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar color='secondary' position=\"static\">\r\n        <Toolbar>\r\n          \r\n          <Typography variant=\"h6\" className={classes.title}>\r\n          <Link className={classes.linkstyle} to='/'>\r\n            🛒 Shopकार्ट 🛍\r\n          </Link>\r\n          </Typography>\r\n          <IconButton \r\n              onClick={gridSwitchHandler} \r\n              edge=\"start\" \r\n              className={classes.menuButton} \r\n              color=\"inherit\" \r\n              aria-label=\"menu\">\r\n                  \r\n                  {props.location.pathname === '/cardrecipe'? <GridOff /> : '' }\r\n                  {props.location.pathname === '/listrecipe'? <GridOn /> : '' }\r\n\r\n          </IconButton>\r\n          <Button onClick={()=>props.history.push('/addrecipe')} color=\"inherit\">Add Product</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header)","export const GET_RECIPIES = 'It loads all recipe'\r\nexport const ACTIVE_RECIPE = 'Vaibhav Agrawal'\r\nexport const REMOVE_ACTIVE_RECIPE = 'It helps in removing it'\r\nexport const CREATE_RECIPE = 'It helps to create new recipe it'\r\nexport const REMOVE_RECIPE = 'It helps to remove recipe'\r\nexport const MODIFY_RECIPE = 'It helps to modify recipe'\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n   //baseURL:'https://infinite-plains-80877.herokuapp.com/'\r\n   baseURL:'https://dummyjson.com/'\r\n    //  baseURL:'https://calm-oasis-79532.herokuapp.com/'\r\n        //  baseURL:'https://infinite-plains-80877.herokuapp.com/'\r\n\r\n})\r\n\r\nexport default instance","import { GET_RECIPIES, ACTIVE_RECIPE, REMOVE_ACTIVE_RECIPE, CREATE_RECIPE, REMOVE_RECIPE,MODIFY_RECIPE } from \"../ActionTypes\";\r\nimport axios from \"../../utils/axios\";\r\n\r\n\r\n\r\nexport const GetRecipe = () => dispatch => {\r\n    axios.get('/products')\r\n        .then(response => {\r\n            console.log(response.data.products)\r\n            return dispatch({\r\n                type: GET_RECIPIES,\r\n                payload: response.data.products\r\n\r\n            })\r\n        })\r\n        .catch(err => console.log(err.response))\r\n}\r\n\r\nexport const CreateRecipe = (recipe) => dispatch => {\r\n    console.log(recipe)\r\n    axios.post('/products/add', recipe)\r\n        .then(response => {\r\n            console.log(response)\r\n            return dispatch({\r\n                type: CREATE_RECIPE,\r\n                payload: response\r\n            })\r\n        })\r\n        .catch(err => console.log(err.response));\r\n\r\n    //console.log(recipe)\r\n    // fetch('https://dummyjson.com/products/add', {\r\n    //     method: 'POST',\r\n    //    // headers: { 'Content-Type': 'application/json' },\r\n    //     body: JSON.stringify(recipe)\r\n    // })\r\n    //     .then(res => {\r\n    //         console.log(res)\r\n    //         return dispatch({\r\n    //             type: CREATE_RECIPE,\r\n    //             payload: res\r\n\r\n    //         })\r\n    //     })\r\n    //     .catch(err => console.log(err.response))\r\n};\r\n\r\nexport const ModifyRecipe = (recipe) => dispatch => {\r\n    //console.log(recipe)\r\n    // axios.patch(`/recipe/update/${id}`, { ...recipe })\r\n    //     .then(response => {\r\n    //         console.log(response);\r\n    //         return dispatch(GetRecipe())\r\n    //     })\r\n    //     .catch(err => console.log(err));\r\n    return dispatch({\r\n        type: MODIFY_RECIPE,\r\n        payload: recipe\r\n    })\r\n\r\n};\r\n\r\nexport const RemoveRecipe = (id) => dispatch => {\r\n    // axios.delete(`/recipe/delete/${id}`)\r\n    //     .then(response => {\r\n    //         return dispatch(GetRecipe())\r\n    //     })\r\n    //     .catch(err => console.log(err));\r\n    console.log(id)\r\n    return dispatch({\r\n        type: REMOVE_RECIPE,\r\n        payload: id\r\n    })\r\n}\r\n\r\n\r\nexport const GetActiveRecipe = (id) => dispatch => {\r\n    console.log(id)\r\n    // axios.get(`/products/${id}`)\r\n    //     .then(response => {\r\n    //         //console.log(response.data)\r\n    //         return dispatch({\r\n    //             type: ACTIVE_RECIPE,\r\n    //             payload: response.data\r\n\r\n    //         })\r\n    //     })\r\n    //     .catch(err => console.log(err.response))\r\n    return dispatch({\r\n        type: ACTIVE_RECIPE,\r\n        payload: id\r\n\r\n    })\r\n\r\n    //console.log(id)\r\n    //return {\r\n    //    type: ACTIVE_RECIPE,\r\n    //    payload: id\r\n    //}\r\n}\r\n\r\nexport const RemoveActiveRecipe = () => {\r\n    return {\r\n        type: REMOVE_ACTIVE_RECIPE,\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardHeader, CardMedia, CardContent, CardActions, Avatar, IconButton, Typography, Button } from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport More from '@material-ui/icons/More';\r\nimport { withRouter } from \"react-router\";\r\nimport { GetActiveRecipe } from '../../../Store/Actions';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    margin: '0 1rem 1rem 0',\r\n\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  button: {\r\n    marginLeft: 'auto'\r\n  }\r\n}));\r\n\r\nconst SingleCard = (props) => {\r\n  const classes = useStyles();\r\n  const { title, id, rating, brand, description, images, date } = props.recipe;\r\n  //console.log(id)\r\n  const dispatch = useDispatch()\r\n\r\n  function moreHandler(d) {\r\n    props.history.push(`/recipeinfo/${d}`)\r\n    dispatch(GetActiveRecipe(d))\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {title.substr(0, 1).toUpperCase()}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={title}\r\n        subheader={brand}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={images[0]}\r\n        title={rating}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n\r\n        <Button\r\n          onClick={() => moreHandler(date)}\r\n          color=\"secondary\"\r\n          className={classes.button}\r\n          startIcon={<More />}\r\n        >\r\n          More\r\n        </Button>\r\n\r\n      </CardActions>\r\n      <Button></Button>\r\n    </Card>\r\n  );\r\n}\r\nexport default withRouter(SingleCard)","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SingleCard from './SingleCard/SingleCard';\r\n\r\n\r\nconst CardRecipe = (props) => {\r\n\r\n  const [state, setstate] = useState(null);\r\n  useEffect(() => {\r\n    if (props.recipy) {\r\n      setstate([...props.recipy])\r\n    }\r\n\r\n  }, [props.recipy]);\r\n  console.log(state)\r\n\r\n\r\n  if (state) {\r\n    for (let i = 0; i < state.length; i++) {\r\n      state[i].date = i + 1\r\n    }\r\n  }\r\n\r\n\r\n  let allList = ''\r\n  if (state) {\r\n    allList = state.map((r, i) =>\r\n      <SingleCard key={i} recipe={r} />\r\n    )\r\n  }\r\n\r\n  return allList\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    recipy: state.RecipeReducer.recipes\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardRecipe);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { TextField, Grid,Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { CreateRecipe,ModifyRecipe } from \"../../Store/Actions/index\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textfields: {\r\n        width: '100%',\r\n        marginBottom: '1rem'\r\n    },\r\n    spaced:{\r\n        marginLeft:'1rem'\r\n    }\r\n}));\r\n\r\nconst AddRecipe = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const initialstate={\r\n        title:'',\r\n        category:'',\r\n        image:'',\r\n        description:'',\r\n        brands:'',\r\n    }\r\n\r\n    const [state,setstate] = useState(initialstate)\r\n\r\n    const changeHandler=(e)=>{\r\n        e.persist()\r\n        setstate(prev=>({...prev,[e.target.name]:e.target.value}))\r\n    }\r\n\r\n    const SubmitRecipeHandler=(e)=>{\r\n        e.preventDefault()\r\n        if(\r\n             state.title.trim()==='' ||   \r\n             state.category.trim()==='' ||\r\n             state.image.trim()==='' ||\r\n             state.description.trim()==='' ||\r\n             state.brands.trim()==='' \r\n         ){return alert('All Fields Are Compulsury')}\r\n\r\n        const {_id,title, category, description, image,brands,date} = state;\r\n        const Recipe = {title, category, description}\r\n        Recipe.brand= brands.split(',')\r\n        // Recipe.ingredientsArray = ingredients\r\n         Recipe.images=[]\r\n         Recipe.images.push(image)\r\n\r\n        if(props.match.url ==='/addrecipe'){\r\n            props.CreateRecipe(Recipe)\r\n            props.history.push('/')\r\n        }\r\n        else{\r\n            // const Recipe = {id,date,dish, chef, description, image}\r\n            // Recipe.ingredientsArray = ingredients.split(',')\r\n            //console.log(_id,Recipe,date)\r\n            Recipe.date=date\r\n            props.ModifyRecipe(Recipe)\r\n            props.history.goBack()\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n     if(props.recipy){\r\n         let recipee = {...props.recipy} \r\n         //recipee.ingredients = recipee.ingredientsArray.join()\r\n         delete recipee.ingredientsArray\r\n         setstate({...recipee})\r\n     }\r\n\r\n     return()=>{\r\n        if(props.match.url ==='/addrecipe'){\r\n            setstate({title:'',\r\n            category:'',\r\n            image:'',\r\n            description:'',\r\n            brands:'',})\r\n        }\r\n     }\r\n    }, [props]);\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item sm={2}></Grid>\r\n            <Grid container item sm={8}>\r\n              <form onSubmit={SubmitRecipeHandler}> \r\n                <TextField\r\n                    className={classes.textfields}\r\n                    color=\"secondary\"\r\n                    label=\"Title\"\r\n                    name='title'\r\n                    onChange={changeHandler}\r\n                    value={state.title}\r\n                    variant=\"outlined\" />\r\n                <TextField\r\n                    className={classes.textfields}\r\n                    color=\"secondary\"\r\n                    name='category'\r\n                    onChange={changeHandler}\r\n                    value={state.category}\r\n                    label=\"Category Name\"\r\n                    variant=\"outlined\" />\r\n                <TextField\r\n                    className={classes.textfields}\r\n                    color=\"secondary\"\r\n                    name='brands'\r\n                    onChange={changeHandler}\r\n                    value={state.brands}\r\n                    label=\"Brand\"\r\n                    variant=\"outlined\" />\r\n                <TextField\r\n                    className={classes.textfields}\r\n                    color=\"secondary\"\r\n                    label=\"Image URL\"\r\n                    name='image'\r\n                    onChange={changeHandler}\r\n                    value={state.image}\r\n                    type='url'\r\n                    variant=\"outlined\" />\r\n                <TextField\r\n                    className={classes.textfields}\r\n                    color=\"secondary\"\r\n                    name='description'\r\n                    onChange={changeHandler}\r\n                    value={state.description}\r\n                    label=\"Product Description\"\r\n                    variant=\"outlined\" />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"secondary\">Save Product</Button>\r\n                <Button onClick={()=>props.history.goBack()} className={classes.spaced} variant=\"contained\" color=\"primary\">Back</Button>\r\n              </form>\r\n            </Grid>\r\n            <Grid item sm={2}></Grid>\r\n        </Grid>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps= state =>{\r\n    return{\r\n        recipy:state.RecipeReducer.activerecipe\r\n    } \r\n  }\r\n  \r\nconst mapDispatchToProps=({\r\n    CreateRecipe,\r\n    ModifyRecipe\r\n  })\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddRecipe);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { RemoveRecipe } from \"../../../Store/Actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, CardContent, Typography, Button } from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n  but: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n    textAlign: 'right',\r\n    marginTop: '2rem'\r\n  },\r\n  ingg: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n    marginTop: '1rem'\r\n  },\r\n  ingg2: {\r\n    padding: '1rem',\r\n    marginTop: '1rem'\r\n  }\r\n}));\r\n\r\nconst RecipeDetails = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [state, setstate] = useState({\r\n    id: '',\r\n    dish: \"\",\r\n    image: \"\",\r\n    ingredientsArray: [],\r\n    chef: \"\",\r\n    date: \"\",\r\n    description: \"\",\r\n\r\n  });\r\n  console.log(state)\r\n\r\n  useEffect(() => {\r\n    if (props.recipy) {\r\n      setstate({ ...props.recipy })\r\n    }\r\n  }, [props]);\r\n  //console.log(state)\r\n\r\n\r\n  const DeleteHandler = () => {\r\n    console.log(state.date)\r\n    props.RemoveRecipe(state.date)\r\n    props.history.push('/')\r\n  }\r\n\r\n  const random = () => Math.floor(Math.random() * 3);\r\n  const badgeColor = ['primary', 'secondary', 'default'];\r\n  const badgeVarient = ['outlined', 'contained', 'text'];\r\n  //const ingredientBadges = state.ingredientsArray.map( ingredient => (\r\n  //  <Button key={ingredient} variant={badgeVarient[random()]} color={badgeColor[random()]}>{ingredient}</Button>\r\n  //) );\r\n  const ingredientBadges = ''\r\n\r\n  return (\r\n\r\n    <CardContent className={classes.content}>\r\n      <Typography component=\"h3\" variant=\"h3\">{state.dish}</Typography>\r\n      <Typography variant=\"subtitle1\" color=\"textSecondary\">{state.chef}</Typography>\r\n      <Typography variant=\"subtitle2\" color=\"textSecondary\">{state.date}</Typography>\r\n      <br />\r\n\r\n      <Typography component=\"h6\" variant=\"h6\">\r\n        Category: {state.category}\r\n      </Typography>\r\n      <Typography variant=\"body1\" color=\"textSecondary\">\r\n        {state.title}\r\n      </Typography>\r\n\r\n      <Typography variant=\"body2\" color=\"textSecondary\">\r\n        Price {state.price}\r\n      </Typography>\r\n      \r\n\r\n      <Paper elevation={3} className={classes.ingg2}>\r\n        <Typography component=\"h4\" variant=\"h4\">\r\n          {state.brand}\r\n          <div className={classes.ingg}>\r\n\r\n            {ingredientBadges}\r\n\r\n          </div>\r\n        </Typography>\r\n\r\n      </Paper>\r\n      <Typography variant=\"body2\" color=\"textSecondary\">\r\n        Stock {state.stock}\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"textSecondary\">\r\n        RATING {state.rating}\r\n      </Typography>\r\n      <div className={classes.but}>\r\n        <Button variant=\"contained\" onClick={() => props.history.push(`${props.match.url}/edit`)}>Edit</Button>\r\n        <Button onClick={DeleteHandler} variant=\"contained\" color=\"primary\">Delete</Button>\r\n        <Button\r\n          onClick={() => props.history.goBack()}\r\n          variant=\"contained\"\r\n          color=\"secondary\">Back\r\n        </Button>\r\n      </div>\r\n\r\n\r\n    </CardContent>\r\n\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    recipy: state.RecipeReducer.activerecipe\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = ({\r\n  RemoveRecipe\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeDetails);\r\n","import React, { useEffect,useState} from 'react';\r\nimport { Redirect,Route,Switch } from \"react-router-dom\";\r\nimport {Paper,CardMedia}from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RecipeDetails from './RecipeDetails/RecipeDetails'\r\nimport AddRecipe from '../AddRecipe/AddRecipe';\r\nimport { connect } from \"react-redux\";\r\nimport { GetActiveRecipe,RemoveActiveRecipe } from \"../../Store/Actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    width:'100%',\r\n    marginBottom:'2rem'\r\n  },\r\n  cover: {\r\n    width: '50%',\r\n\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width:'50%'\r\n  },\r\n  \r\n}));\r\n\r\n\r\nconst RecipeInfo = (props) => {\r\n  const classes = useStyles();\r\n  \r\n  const [state, setstate] = useState({});\r\n\r\n  useEffect(() => {\r\n   if(props.recipy === null){\r\n     setTimeout(() => {\r\n      props.GetActiveRecipe(props.match.params.id)\r\n     }, 2500);\r\n      \r\n    }else{\r\n      \r\n      setstate({...props.recipy})\r\n    }\r\n\r\n    return()=>{\r\n      if(props.recipy){\r\n        props.RemoveActiveRecipe()\r\n      }\r\n    }\r\n    \r\n  }, [props]);\r\n\r\n//console.log(props.recipy)\r\n\r\n  return (\r\n    <Paper elevation={3} className={classes.root}>\r\n      {state.images!=undefined && <CardMedia\r\n        className={classes.cover}\r\n        src = 'Please no warning'\r\n        image={state.images[0]}\r\n        title={state.title}\r\n      /> }\r\n      <div className={classes.description}>\r\n          <Switch>\r\n              \r\n              <Route exact path={`${props.match.url}/`} component={RecipeDetails} />\r\n              <Route path={`${props.match.url}/edit`} component={AddRecipe} />\r\n              <Redirect from={props.match.url} to={`${props.match.url}/info`} />\r\n          </Switch>\r\n\r\n      </div>\r\n    </Paper> \r\n  );\r\n}\r\n\r\nconst mapStateToProps= state =>{\r\n  return{\r\n    recipy:state.RecipeReducer.activerecipe\r\n  }\r\n  \r\n}\r\n\r\nconst mapDispatchToProps=({\r\n  GetActiveRecipe,\r\n  RemoveActiveRecipe\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeInfo);\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      padding:'10px 1.5rem'\r\n    },\r\n    imageSpace: {\r\n      marginRight: '1rem'\r\n    }\r\n  }));\r\n\r\nconst SingleList = (props) => {\r\n    const classes = useStyles();\r\n    //const { id,dish, description, image} = props.recipe;\r\n    const { title,id,rating, brand, description, images} = props.recipe;\r\n\r\n    return (\r\n        <div>\r\n        <Button\r\n        onClick={()=>props.history.push(`/recipeinfo/${id}`)}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={classes.button}\r\n        title={description}\r\n      >\r\n        <img className={classes.imageSpace} height={50} src={images[0]} alt={brand} />\r\n       {brand}\r\n      </Button>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(SingleList)","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SingleList from './SingleList/SingleList';\r\n\r\nconst ListRecipe = (props) => {\r\n\r\n  const [state, setstate] = useState(null);\r\n  useEffect(() => {\r\n    if(props.recipy){\r\n      setstate([...props.recipy])\r\n    }\r\n    \r\n  }, [props.recipy]);\r\n\r\n\r\n  let allList=''\r\n  if(state){\r\n    allList = state.map((r,i)=>\r\n      <SingleList key={i} recipe={r} />\r\n      //console.log('first')\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {allList}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n  return{\r\n    recipy: state.RecipeReducer.recipes\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ListRecipe);\r\n","import React, { Component} from 'react';\nimport Header from \"./Components/Header/Header\";\nimport {Grid,Typography} from \"@material-ui/core\";\nimport './App.css';\nimport CardRecipe from \"./Components/CardRecipe/CardRecipe\";\nimport AddRecipe from \"./Components/AddRecipe/AddRecipe\";\nimport RecipeInfo from \"./Components/RecipeInfo/RecipeInfo\";\nimport ListRecipe from \"./Components/ListRecipe/ListRecipe\";\nimport {Redirect,Route,Switch } from \"react-router-dom\";\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { GetRecipe } from \"./Store/Actions\";\n\nclass App extends Component {\n  \n  componentDidMount() {\n    this.props.GetRecipe()\n  }\n  \n  render() { \n    // let isGrid = 'row';\n    // if(this.props.location.pathname === '/listrecipe'){\n    //   isGrid =  'column';\n    // }\n\n    return (\n      <div>\n        <Header />\n        <Grid container >\n            <Grid item sm={1}></Grid>\n            <Grid container item sm={10}>\n                <Switch>\n                  <Route path='/cardrecipe' component={CardRecipe} />\n                  <Route path='/listrecipe' component={ListRecipe} />\n                  <Route path='/addrecipe' component={AddRecipe} />\n                  <Route path='/recipeinfo/:id' component={RecipeInfo} />\n                  <Redirect from='/' to='/cardrecipe'  />\n                </Switch>\n            </Grid>\n            <Grid item sm={1}></Grid>\n        </Grid>\n        <Typography align='center' className='footer'>Made with <span>❤</span>  by Vaibhav.</Typography>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps=({\n  GetRecipe\n})\n\nexport default connect(null,mapDispatchToProps)(withRouter(App));","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GET_RECIPIES, ACTIVE_RECIPE, REMOVE_ACTIVE_RECIPE, CREATE_RECIPE, REMOVE_RECIPE ,MODIFY_RECIPE} from \"../ActionTypes\";\r\n\r\n\r\nconst initialState = {\r\n    recipes: [],\r\n    activerecipe: null\r\n}\r\n\r\nconst RecipeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_RECIPIES:\r\n            const apiRecipe = action.payload.map(r => {\r\n                return {\r\n                    ...r,\r\n                    id: r._id,\r\n                    date: String(r.createdAt)\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                recipes: apiRecipe,\r\n            }\r\n        case ACTIVE_RECIPE:\r\n            for (let i = 0; i < state.recipes.length; i++) {\r\n                if (state.recipes[i].date === action.payload) {\r\n                    return {\r\n                        ...state,\r\n                        activerecipe: state.recipes[i],\r\n                    }\r\n                }\r\n            }\r\n\r\n        case REMOVE_ACTIVE_RECIPE:\r\n            return {\r\n                ...state,\r\n                activerecipe: null\r\n            }\r\n        case REMOVE_RECIPE:\r\n            console.log(action.payload)\r\n            const RRD = [...state.recipes]\r\n            console.log(RRD)\r\n            const FRD = RRD.filter(r => r.date !== action.payload)\r\n            return {\r\n                ...state,\r\n                recipes: FRD,\r\n            }\r\n\r\n        case CREATE_RECIPE:\r\n            const CNR = [...state.recipes]\r\n            console.log(action.payload.data)\r\n            CNR.push(action.payload.data)\r\n            return {\r\n                ...state,\r\n                recipes: CNR\r\n            }\r\n\r\n        case MODIFY_RECIPE:\r\n            const MNR = [...state.recipes]\r\n            console.log(MNR)\r\n            const MRIndex = MNR.findIndex(r => r.date === action.payload.date)\r\n            MNR[MRIndex] = action.payload\r\n            console.log(MRIndex)\r\n            return {\r\n                ...state,\r\n                recipes: MNR\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default RecipeReducer","import { combineReducers } from \"redux\";\r\nimport  RecipeReducer  from \"./RecipeReducer\";\r\n\r\nexport default combineReducers({\r\n    RecipeReducer\r\n})","import { createStore,applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport  Reducers  from \"./Reducers\";\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(Reducers, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport  store  from \"./Store\";\n\nReactDOM.render(\n\n  <Provider store={store}>\n\n  <BrowserRouter><App /></BrowserRouter>\n  \n  </Provider>\n  ,\ndocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}